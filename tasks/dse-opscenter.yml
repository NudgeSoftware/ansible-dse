- name: Installs Opscenter
  apt:
    name: opscenter
    state: present
  notify:
    - Restart Opscenter
  when: ansible_os_family == "Debian"

- block:
  - name: Add datastax rpm repo key
    rpm_key:
      key: https://rpm.datastax.com/rpm/repo_key
  - name: Add datastax rpm repo
    yum_repository:
      name: dse
      description: Datastax YUM repo
      baseurl: "https://rpm.datastax.com/enterprise"
      username: "{{ dse_repository_login }}"
      password: "{{ dse_repository_password }}"
      enabled: yes
  - name: Install Opscenter
    yum:
      name: opscenter
      state: present
    notify:
      - Restart Opscenter
  when: ansible_os_family == "RedHat"

- name: Update opscenterd.conf
  template:
    src: opscenterd.conf.j2
    dest: /etc/opscenter/opscenterd.conf
    owner: opscenter
    group: opscenter
    mode: 0644
  tags: ["config","dse:config"]
  notify:
    - Restart Opscenter

- block:
  - meta: flush_handlers
  - name: Make sure Opscenter is running
    service:
      name: opscenterd
      state: started
      enabled: yes
  - set_fact:
      opscenter_scheme: http{{ (dse_opscenter.webserver.ssl_port|d(0)|int > 0)|ternary('s','') }}
      opscenter_port: "{{ dse_opscenter_port|d(dse_opscenter.webserver.ssl_port)|int }}"
  - name: Wait for Opscenter to start listening on port {{ dse_opscenter_port }}
    wait_for: 
      host: "{{ dse_opscenter_config.domain|d(ansible_hostname) }}" 
      port: "{{ opscenter_port }}"
  - set_fact:
      opscenter_url: "{{ opscenter_scheme }}://{{ dse_opscenter_config.domain|d(ansible_hostname) }}:{{ opscenter_port }}"
      when: dse_opscenter.webserver.ssl_keyfile|d('')|length > 0
  - block:
    - name: Login to Opscenter if authentication is enabled
      uri:
        url={{ opscenter_url }}/login
        method=POST
        body=' {"username":"admin","password":"{{ dse_opscenter_config.admin_password }}"}'
        body_format=raw
        status_code=200
        return_content=yes
      ignore_errors: yes
      register: current_session
    - name: Login to Opscenter with default password
      uri:
        url={{ opscenter_url }}/login
        method=POST
        body=' {"username":"admin","password":"admin"}'
        body_format=raw
        status_code=200
        return_content=yes
      when: 
      - dse_opscenter_config.admin_password != 'admin'
      - current_session|failed
      register: default_session
    - set_fact: 
        session_id: "{{ default_session.json.sessionid }}"
      when: 
      - current_session|failed
      - default_session|success
    - name: Change admin password in Opscenter
      uri:
        url={{ opscenter_url }}/users/admin
        method=PUT
        HEADER_opscenter-session={{ session_id|default("") }}
        body=' {"old_password":"admin","password":"{{ dse_opscenter_config.admin_password }}","password_2":"{{ dse_opscenter_config.admin_password }}"}'
        body_format=raw
        status_code=200
        return_content=yes
      when: 
      - current_session|failed
      - default_session|success
      register: default_session
    - set_fact: 
        session_id: "{{ current_session.json.sessionid }}"
      when: 
      - current_session|success
    when: dse_opscenter.authentication.enabled|d(false)
  - include: dse-opscenter-cluster.yml
    with_items: "{{ dse_opscenter_clusters }}"
    loop_control:
      loop_var: cluster
  when: dse_opscenter_clusters|d([])|length > 0
